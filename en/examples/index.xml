<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Examples on Documentation for Balerter</title>
    <link>https://balerter.github.io/en/examples/</link>
    <description>Recent content in Examples on Documentation for Balerter</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Feb 2020 16:08:54 +0300</lastBuildDate>
    
	<atom:link href="https://balerter.github.io/en/examples/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple example</title>
      <link>https://balerter.github.io/en/examples/00/</link>
      <pubDate>Tue, 04 Feb 2020 16:37:04 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/examples/00/</guid>
      <description>В данной статье мы по шагам проработаем настройку системы и создание скрипта для следующей задачи:
 У нас есть Prometheus, который собирает какие-то метрики. Мы хотим отслеживать метрику go_memstats_heap_objects. Если значение превысит заданный нами порог, создадим алерт.
 Конфигурирование В первую очередь требуется создать файл конфигуации:
scripts: updateInterval: 5s sources: folder: - name: scripts path: /opt/scripts mask: &#39;*.lua&#39; datasources: prometheus: - name: prom1 url: 127.0.0.1:9090 channels: telegram: - name: tg1 token: TELEGRAM-BOT-TOKEN chatId: 100500 В кофиге мы указали</description>
    </item>
    
    <item>
      <title>CPU Load</title>
      <link>https://balerter.github.io/en/examples/01/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/examples/01/</guid>
      <description>Check CPU load. If it is greater than 70%, change an alert level to Error  Prometheus collected data from a Node Exporter Metrics have a label instance, which identified every server  -- @interval 30s -- @name cpu70 local cpuLimit = 0.7 local prom1 = require(&#39;datasource.prometheus.prom1&#39;) local alert = require(&#39;alert&#39;) local res, err = prom1.range(&#39;rate(sum(node_cpu_seconds_total{mode!=&amp;quot;idle&amp;quot;}) by (instance)) / rate(sum(node_cpu_seconds_total) by (instance))&#39;) if err ~= nil then return end for i, item in pairs(res) do local v = item.</description>
    </item>
    
    <item>
      <title>A goroutines count (with a chart)</title>
      <link>https://balerter.github.io/en/examples/02/</link>
      <pubDate>Tue, 04 Feb 2020 16:32:46 +0300</pubDate>
      
      <guid>https://balerter.github.io/en/examples/02/</guid>
      <description>Check a goroutines count  Prometheus collect data Remote S3 storage described in configuration  -- @interval 30s -- @name goroutines local prom1 = require(&#39;datasource.prometheus.prom1&#39;) local alert = require(&#39;alert&#39;) local chart = require(&#39;chart&#39;) local storage = require(&#39;storage.s3.dev&#39;) local now = os.time(os.date(&amp;quot;!*t&amp;quot;)) rangeOptions = { [&#39;start&#39;] = now - 86400, [&#39;end&#39;] = now, [&#39;step&#39;] = &#39;3600&#39; } res = prom1.range(&#39;sum(go_goroutines)&#39;, rangeOptions) local chartOptions = { [&#39;series&#39;] = { { [&#39;color&#39;] = &#39;red&#39;, [&#39;line_color&#39;] = &#39;blue&#39;, [&amp;quot;data&amp;quot;] = res[1].</description>
    </item>
    
  </channel>
</rss>